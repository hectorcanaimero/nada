{"version":3,"sources":["webpack:///node_modules/ng-lazyload-image/fesm2015/ng-lazyload-image.js","webpack:///src/app/@sharing/image/image.module.ts","webpack:///src/app/@widgets/ofertas/ofertas.component.ts","webpack:///src/app/@widgets/ofertas/ofertas.component.html","webpack:///src/app/@core/directives/lazy-load.directive.ts","webpack:///src/app/@sharing/sidebar/sidebar.component.html","webpack:///src/app/@sharing/sidebar/sidebar.component.ts","webpack:///src/app/@sharing/sidebar/sidebar.module.ts","webpack:///src/app/@sharing/titulo/titulo.component.html","webpack:///src/app/@sharing/titulo/titulo.component.ts","webpack:///src/app/@core/directives/webp-product.directive.ts","webpack:///src/app/@core/pipes/truncate.pipe.ts","webpack:///src/app/@sharing/product/product.component.html","webpack:///src/app/@sharing/product/product.component.ts","webpack:///src/app/@core/directives/product.directive.ts","webpack:///src/app/@core/pipes/safe.pipe.ts","webpack:///src/app/@sharing/swipe/swipe.module.ts"],"names":["isChildOfPicture","element","Boolean","parentElement","nodeName","toLowerCase","isImageElement","setImage","imagePath","useSrcset","srcset","src","style","backgroundImage","setSources","attrName","image","sources","getElementsByTagName","i","length","attrValue","getAttribute","setSourcesToDefault","setSourcesToLazy","setSourcesToError","setImageAndSources","setSourcesFn","setImageAndSourcesToDefault","setImageAndSourcesToLazy","setImageAndSourcesToError","removeCssClassName","cssClassName","className","replace","addCssClassName","includes","IntersectionObserverHooks","this","navigator","window","undefined","platformId","attributes","newAttributes","defaultImagePath","skipLazyLoading","decode","img","parentClone","parentNode","cloneNode","Image","referrerPolicy","sizes","then","Promise","resolve","reject","onload","onerror","error","errorImagePath","isBot","_a","userAgent","test","super","arguments","observers","WeakMap","intersectionSubject","Subject","uniqKey","of","isIntersecting","customObservable","scrollContainerKey","scrollContainer","options","root","offset","rootMargin","observer","get","IntersectionObserver","entrys","loadingCallback","set","observe","Observable","create","obs","subscription","pipe","filter","entry","target","subscribe","unsubscribe","unobserve","event","forEach","next","ɵfac","t","ɵIntersectionObserverHooks_BaseFactory","ɵprov","token","factory","LAZYLOAD_IMAGE_HOOKS","LazyLoadImageModule","ɵmod","type","ɵinj","providers","provide","useClass","ImageModule","use","OfertasComponent","db","storage","icon","link","title","loja","total","freeMode","spaceBetween","grabCursor","slidesPerView","loop","autoplay","delay","breakpoints","360","768","1024","1200","navigation","nextEl","prevEl","pagination","el","clickable","getOfertas","code","result","items$","res","row","slug","campanha","departamento","slice","trackBy","index","item","host","LazyLoadDirective","srcAttr","canLazyLoad","lazyLoadImage","loadImage","entries","nativeElement","SidebarComponent","news","trackById","items","PageCollection","noticias$","LastNews","SidebarModule","TituloComponent","WebpProductDirective","v1","url","TruncatePipe","value","limit","completeWords","ellipsis","substr","lastIndexOf","ProductComponent","router","seo","util","storageMap","mas18","webp","product","imagem","goToProduct","dataLayerTracking","productAction","productName","produtos","dsc_produto","navigate","toSlug","dsc_departamento","dsc_setor","changes","console","log","currentValue","ProductDirective","SafePipe","sanitizer","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","Error","SwipeModule"],"mappings":"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","file":"x","sourcesContent":["import { Subject, of, Observable, ReplaySubject, never, empty } from 'rxjs';\nimport { filter, tap, take, mergeMap, map, catchError, switchMap, startWith, sampleTime, share } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport { InjectionToken, EventEmitter, Directive, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nfunction getNavigator() {\n    return typeof window !== 'undefined' ? window.navigator : undefined;\n}\nfunction isChildOfPicture(element) {\n    return Boolean(element.parentElement && element.parentElement.nodeName.toLowerCase() === 'picture');\n}\nfunction isImageElement(element) {\n    return element.nodeName.toLowerCase() === 'img';\n}\nfunction setImage(element, imagePath, useSrcset) {\n    if (isImageElement(element)) {\n        if (useSrcset && 'srcset' in element) {\n            element.srcset = imagePath;\n        }\n        else {\n            element.src = imagePath;\n        }\n    }\n    else {\n        element.style.backgroundImage = `url('${imagePath}')`;\n    }\n    return element;\n}\nfunction setSources(attrName) {\n    return (image) => {\n        const sources = image.parentElement.getElementsByTagName('source');\n        for (let i = 0; i < sources.length; i++) {\n            const attrValue = sources[i].getAttribute(attrName);\n            if (attrValue) {\n                // Check if `srcset` is supported by the current browser\n                if ('srcset' in sources[i]) {\n                    sources[i].srcset = attrValue;\n                }\n                else {\n                    sources[i].src = attrValue;\n                }\n            }\n        }\n    };\n}\nconst setSourcesToDefault = setSources('defaultImage');\nconst setSourcesToLazy = setSources('lazyLoad');\nconst setSourcesToError = setSources('errorImage');\nfunction setImageAndSources(setSourcesFn) {\n    return (element, imagePath, useSrcset) => {\n        if (isImageElement(element) && isChildOfPicture(element)) {\n            setSourcesFn(element);\n        }\n        if (imagePath) {\n            setImage(element, imagePath, useSrcset);\n        }\n    };\n}\nconst setImageAndSourcesToDefault = setImageAndSources(setSourcesToDefault);\nconst setImageAndSourcesToLazy = setImageAndSources(setSourcesToLazy);\nconst setImageAndSourcesToError = setImageAndSources(setSourcesToError);\n\nclass Hooks {\n    constructor() {\n        this.navigator = getNavigator();\n    }\n    setPlatformId(platformId) {\n        this.platformId = platformId;\n    }\n    onDestroy(attributes) { }\n    onAttributeChange(newAttributes) { }\n}\n\nconst cssClassNames = {\n    loaded: 'ng-lazyloaded',\n    loading: 'ng-lazyloading',\n    failed: 'ng-failed-lazyloaded',\n};\nfunction removeCssClassName(element, cssClassName) {\n    element.className = element.className.replace(cssClassName, '');\n}\nfunction addCssClassName(element, cssClassName) {\n    if (!element.className.includes(cssClassName)) {\n        element.className += ` ${cssClassName}`;\n    }\n}\nfunction hasCssClassName(element, cssClassName) {\n    return element.className && element.className.includes(cssClassName);\n}\n\nclass SharedHooks extends Hooks {\n    setup(attributes) {\n        setImageAndSourcesToDefault(attributes.element, attributes.defaultImagePath, attributes.useSrcset);\n        addCssClassName(attributes.element, cssClassNames.loading);\n        if (hasCssClassName(attributes.element, cssClassNames.loaded)) {\n            removeCssClassName(attributes.element, cssClassNames.loaded);\n        }\n    }\n    finally(attributes) {\n        addCssClassName(attributes.element, cssClassNames.loaded);\n        removeCssClassName(attributes.element, cssClassNames.loading);\n    }\n    loadImage(attributes) {\n        if (this.skipLazyLoading(attributes)) {\n            // Set the image right away for bots for better SEO\n            return [attributes.imagePath];\n        }\n        const { element, useSrcset, imagePath, decode } = attributes;\n        let img;\n        if (isImageElement(element) && isChildOfPicture(element)) {\n            const parentClone = element.parentNode.cloneNode(true);\n            img = parentClone.getElementsByTagName('img')[0];\n            setSourcesToLazy(img);\n            setImage(img, imagePath, useSrcset);\n        }\n        else {\n            img = new Image();\n            if (isImageElement(element) && element.referrerPolicy) {\n                img.referrerPolicy = element.referrerPolicy;\n            }\n            if (isImageElement(element) && element.sizes) {\n                img.sizes = element.sizes;\n            }\n            if (useSrcset && 'srcset' in img) {\n                img.srcset = imagePath;\n            }\n            else {\n                img.src = imagePath;\n            }\n        }\n        if (decode && img.decode) {\n            return img.decode().then(() => imagePath);\n        }\n        return new Promise((resolve, reject) => {\n            img.onload = () => resolve(imagePath);\n            img.onerror = () => reject(null);\n        });\n    }\n    setErrorImage(error, attributes) {\n        const { element, useSrcset, errorImagePath } = attributes;\n        setImageAndSourcesToError(element, errorImagePath, useSrcset);\n        addCssClassName(element, cssClassNames.failed);\n    }\n    setLoadedImage(imagePath, attributes) {\n        const { element, useSrcset } = attributes;\n        setImageAndSourcesToLazy(element, imagePath, useSrcset);\n    }\n    isDisabled() {\n        // Disable if SSR and the user isn't a bot\n        return isPlatformServer(this.platformId) && !this.isBot();\n    }\n    skipLazyLoading(attributes) {\n        return this.isBot(attributes);\n    }\n    isBot(attributes) {\n        var _a;\n        if ((_a = this.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) {\n            return /googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\\ link\\ preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|duckduckbot/i.test(this.navigator.userAgent);\n        }\n        return false;\n    }\n}\n\nclass IntersectionObserverHooks extends SharedHooks {\n    constructor() {\n        super(...arguments);\n        this.observers = new WeakMap();\n        this.intersectionSubject = new Subject();\n        this.uniqKey = {};\n    }\n    getObservable(attributes) {\n        if (this.skipLazyLoading(attributes)) {\n            return of({ isIntersecting: true });\n        }\n        if (attributes.customObservable) {\n            return attributes.customObservable;\n        }\n        const scrollContainerKey = attributes.scrollContainer || this.uniqKey;\n        const options = {\n            root: attributes.scrollContainer || null,\n        };\n        if (attributes.offset) {\n            options.rootMargin = `${attributes.offset}px`;\n        }\n        let observer = this.observers.get(scrollContainerKey);\n        if (!observer) {\n            observer = new IntersectionObserver((entrys) => this.loadingCallback(entrys), options);\n            this.observers.set(scrollContainerKey, observer);\n        }\n        observer.observe(attributes.element);\n        return Observable.create((obs) => {\n            const subscription = this.intersectionSubject.pipe(filter((entry) => entry.target === attributes.element)).subscribe(obs);\n            return () => {\n                subscription.unsubscribe();\n                observer.unobserve(attributes.element);\n            };\n        });\n    }\n    isVisible(event) {\n        return event.isIntersecting;\n    }\n    loadingCallback(entrys) {\n        entrys.forEach((entry) => this.intersectionSubject.next(entry));\n    }\n}\nIntersectionObserverHooks.ɵfac = function IntersectionObserverHooks_Factory(t) { return ɵIntersectionObserverHooks_BaseFactory(t || IntersectionObserverHooks); };\nIntersectionObserverHooks.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: IntersectionObserverHooks, factory: IntersectionObserverHooks.ɵfac });\nconst ɵIntersectionObserverHooks_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(IntersectionObserverHooks);\n\nfunction lazyLoadImage(hooks, attributes) {\n    return (evntObservable) => {\n        return evntObservable.pipe(tap((data) => attributes.onStateChange.emit({ reason: 'observer-emit', data })), filter((event) => hooks.isVisible(event, attributes)), take(1), tap(() => attributes.onStateChange.emit({ reason: 'start-loading' })), mergeMap(() => hooks.loadImage(attributes)), tap(() => attributes.onStateChange.emit({ reason: 'mount-image' })), tap((imagePath) => hooks.setLoadedImage(imagePath, attributes)), tap(() => attributes.onStateChange.emit({ reason: 'loading-succeeded' })), map(() => true), catchError((error) => {\n            attributes.onStateChange.emit({ reason: 'loading-failed', data: error });\n            hooks.setErrorImage(error, attributes);\n            return of(false);\n        }), tap(() => {\n            attributes.onStateChange.emit({ reason: 'finally' });\n            hooks.finally(attributes);\n        }));\n    };\n}\n\nconst LAZYLOAD_IMAGE_HOOKS = new InjectionToken('LazyLoadImageHooks');\n\nclass LazyLoadImageDirective {\n    constructor(el, ngZone, platformId, hooks) {\n        this.onStateChange = new EventEmitter(); // Emits an event on every state change\n        this.elementRef = el;\n        this.ngZone = ngZone;\n        this.propertyChanges$ = new ReplaySubject();\n        this.hooks = hooks;\n        this.hooks.setPlatformId(platformId);\n        this.uid = Math.random().toString(36).substr(2, 9);\n    }\n    ngOnChanges() {\n        if (this.debug === true && !this.debugSubscription) {\n            this.debugSubscription = this.onStateChange.subscribe((e) => console.log(e));\n        }\n        this.propertyChanges$.next({\n            element: this.elementRef.nativeElement,\n            imagePath: this.lazyImage,\n            defaultImagePath: this.defaultImage,\n            errorImagePath: this.errorImage,\n            useSrcset: this.useSrcset,\n            offset: this.offset ? this.offset | 0 : 0,\n            scrollContainer: this.scrollTarget,\n            customObservable: this.customObservable,\n            decode: this.decode,\n            onStateChange: this.onStateChange,\n            id: this.uid,\n        });\n    }\n    ngAfterContentInit() {\n        if (this.hooks.isDisabled()) {\n            return null;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.loadSubscription = this.propertyChanges$\n                .pipe(tap((attributes) => this.hooks.onAttributeChange(attributes)), tap((attributes) => attributes.onStateChange.emit({ reason: 'setup' })), tap((attributes) => this.hooks.setup(attributes)), switchMap((attributes) => {\n                if (!attributes.imagePath) {\n                    return never();\n                }\n                return this.hooks.getObservable(attributes).pipe(lazyLoadImage(this.hooks, attributes));\n            }))\n                .subscribe({\n                next: () => null,\n            });\n        });\n    }\n    ngOnDestroy() {\n        var _a, _b;\n        this.propertyChanges$\n            .pipe(take(1))\n            .subscribe({ next: (attributes) => this.hooks.onDestroy(attributes) })\n            .unsubscribe();\n        (_a = this.loadSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        (_b = this.debugSubscription) === null || _b === void 0 ? void 0 : _b.unsubscribe();\n    }\n}\nLazyLoadImageDirective.ɵfac = function LazyLoadImageDirective_Factory(t) { return new (t || LazyLoadImageDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(LAZYLOAD_IMAGE_HOOKS)); };\nLazyLoadImageDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LazyLoadImageDirective, selectors: [[\"\", \"lazyLoad\", \"\"]], inputs: { lazyImage: [\"lazyLoad\", \"lazyImage\"], defaultImage: \"defaultImage\", errorImage: \"errorImage\", scrollTarget: \"scrollTarget\", customObservable: \"customObservable\", offset: \"offset\", useSrcset: \"useSrcset\", decode: \"decode\", debug: \"debug\" }, outputs: { onStateChange: \"onStateChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nLazyLoadImageDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Hooks, decorators: [{ type: Inject, args: [LAZYLOAD_IMAGE_HOOKS,] }] }\n];\nLazyLoadImageDirective.propDecorators = {\n    lazyImage: [{ type: Input, args: ['lazyLoad',] }],\n    defaultImage: [{ type: Input }],\n    errorImage: [{ type: Input }],\n    scrollTarget: [{ type: Input }],\n    customObservable: [{ type: Input }],\n    offset: [{ type: Input }],\n    useSrcset: [{ type: Input }],\n    decode: [{ type: Input }],\n    debug: [{ type: Input }],\n    onStateChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LazyLoadImageDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[lazyLoad]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: Hooks, decorators: [{\n                type: Inject,\n                args: [LAZYLOAD_IMAGE_HOOKS]\n            }] }]; }, { onStateChange: [{\n            type: Output\n        }], lazyImage: [{\n            type: Input,\n            args: ['lazyLoad']\n        }], defaultImage: [{\n            type: Input\n        }], errorImage: [{\n            type: Input\n        }], scrollTarget: [{\n            type: Input\n        }], customObservable: [{\n            type: Input\n        }], offset: [{\n            type: Input\n        }], useSrcset: [{\n            type: Input\n        }], decode: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }] }); })();\n\nclass LazyLoadImageModule {\n}\nLazyLoadImageModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LazyLoadImageModule });\nLazyLoadImageModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LazyLoadImageModule_Factory(t) { return new (t || LazyLoadImageModule)(); }, providers: [{ provide: LAZYLOAD_IMAGE_HOOKS, useClass: IntersectionObserverHooks }] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LazyLoadImageModule, { declarations: [LazyLoadImageDirective], exports: [LazyLoadImageDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LazyLoadImageModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [LazyLoadImageDirective],\n                exports: [LazyLoadImageDirective],\n                providers: [{ provide: LAZYLOAD_IMAGE_HOOKS, useClass: IntersectionObserverHooks }]\n            }]\n    }], null, null); })();\n\nclass Rect {\n    constructor(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    static fromElement(element) {\n        const { left, top, right, bottom } = element.getBoundingClientRect();\n        if (left === 0 && top === 0 && right === 0 && bottom === 0) {\n            return Rect.empty;\n        }\n        else {\n            return new Rect(left, top, right, bottom);\n        }\n    }\n    static fromWindow(_window) {\n        return new Rect(0, 0, _window.innerWidth, _window.innerHeight);\n    }\n    inflate(inflateBy) {\n        this.left -= inflateBy;\n        this.top -= inflateBy;\n        this.right += inflateBy;\n        this.bottom += inflateBy;\n    }\n    intersectsWith(rect) {\n        return rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\n    }\n    getIntersectionWith(rect) {\n        const left = Math.max(this.left, rect.left);\n        const top = Math.max(this.top, rect.top);\n        const right = Math.min(this.right, rect.right);\n        const bottom = Math.min(this.bottom, rect.bottom);\n        if (right >= left && bottom >= top) {\n            return new Rect(left, top, right, bottom);\n        }\n        else {\n            return Rect.empty;\n        }\n    }\n}\nRect.empty = new Rect(0, 0, 0, 0);\n\nclass ScrollHooks extends SharedHooks {\n    constructor() {\n        super(...arguments);\n        this.getWindow = () => window;\n        this.scrollListeners = new WeakMap();\n        // Only create one scroll listener per target and share the observable.\n        // Typical, there will only be one observable per application\n        this.getScrollListener = (scrollTarget) => {\n            if (!scrollTarget || typeof scrollTarget.addEventListener !== 'function') {\n                console.warn('`addEventListener` on ' + scrollTarget + ' (scrollTarget) is not a function. Skipping this target');\n                return empty();\n            }\n            const scrollListener = this.scrollListeners.get(scrollTarget);\n            if (scrollListener) {\n                return scrollListener;\n            }\n            const srollEvent = Observable.create((observer) => {\n                const eventName = 'scroll';\n                const handler = (event) => observer.next(event);\n                const options = { passive: true, capture: false };\n                scrollTarget.addEventListener(eventName, handler, options);\n                return () => scrollTarget.removeEventListener(eventName, handler, options);\n            });\n            const listener = this.sampleObservable(srollEvent);\n            this.scrollListeners.set(scrollTarget, listener);\n            return listener;\n        };\n    }\n    getObservable(attributes) {\n        if (this.skipLazyLoading(attributes)) {\n            return of('load');\n        }\n        else if (attributes.customObservable) {\n            return attributes.customObservable.pipe(startWith(''));\n        }\n        else if (attributes.scrollContainer) {\n            return this.getScrollListener(attributes.scrollContainer);\n        }\n        return this.getScrollListener(this.getWindow());\n    }\n    isVisible(event, attributes) {\n        const elementBounds = Rect.fromElement(attributes.element);\n        if (elementBounds === Rect.empty) {\n            return false;\n        }\n        const windowBounds = Rect.fromWindow(this.getWindow());\n        elementBounds.inflate(attributes.offset);\n        if (attributes.scrollContainer) {\n            const scrollContainerBounds = Rect.fromElement(attributes.scrollContainer);\n            const intersection = scrollContainerBounds.getIntersectionWith(windowBounds);\n            return elementBounds.intersectsWith(intersection);\n        }\n        else {\n            return elementBounds.intersectsWith(windowBounds);\n        }\n    }\n    sampleObservable(obs, scheduler) {\n        return obs.pipe(sampleTime(100, scheduler), share(), startWith(''));\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Hooks, IntersectionObserverHooks, LAZYLOAD_IMAGE_HOOKS, LazyLoadImageDirective, LazyLoadImageModule, ScrollHooks, SharedHooks };\n\n//# sourceMappingURL=ng-lazyload-image.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { DirectiveModule } from '@core/directives/directive.module';\n\nimport { ImageComponent } from './image.component';\n\n@NgModule({\n  declarations: [ImageComponent],\n  exports: [ImageComponent],\n  imports: [\n    RouterModule,\n    CommonModule,\n    DirectiveModule,\n    MDBBootstrapModule,\n    LazyLoadImageModule,\n  ]\n})\nexport class ImageModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map, tap  } from 'rxjs/operators';\n\nimport { DataService } from '@core/services/data.service';\nimport { Ofertas } from '@core/interfaces/ofertas';\nimport { StorageMap } from '@ngx-pwa/local-storage';\n\nimport SwiperCore, { EffectFade,   Navigation, Pagination, A11y, Lazy } from \"swiper/core\";\nSwiperCore.use([EffectFade, Navigation, Pagination, A11y, Lazy]);\n\n@Component({\n  selector: 'app-widget-ofertas',\n  templateUrl: './ofertas.component.html',\n  styleUrls: ['./ofertas.component.scss'],\n})\nexport class OfertasComponent implements OnInit {\n\n  // titulo\n  @Input() icon: string = '';\n  @Input() link: string = '';\n  @Input() title: string = '';\n\n  // Ofertas\n  @Input() code: any;\n  @Input() type: any;\n  @Input() sector: number;\n  @Input() data$: Observable<Ofertas[]>;\n\n  items$: Observable<Ofertas[]>;\n  loja: any = [];\n  total: number = 0;\n\n  options = {\n    freeMode: true,\n    spaceBetween: 15,\n    grabCursor: true,\n    slidesPerView: 1.5,\n    type: 'progressbar',\n    loop: true,\n    autoplay: { delay: 1800 },\n    breakpoints: {\n      360:  { slidesPerView: 2 },\n      768:  { slidesPerView: 3.5 },\n      1024: { slidesPerView: 4.5 },\n      1200: { slidesPerView: 5 },\n    },\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n    pagination: { el: '.swiper-pagination', clickable: true },\n  }\n\n  constructor(\n    private db: DataService,\n    private storage: StorageMap,\n  ) {}\n\n  ngOnInit(): void {\n    this.getOfertas(this.code);\n    this.storage.get('Loja').subscribe((res) => this.loja = res)\n  }\n\n  getOfertas = (code: any) => {\n    let result: any = [];\n    this.items$ = this.storage.get('ofertas').pipe(\n      map((res: Ofertas) => {\n        if (this.type === 'slug') result = res?.filter((row => row.slug === code));\n        else if (this.type === 'campanha') result = res?.filter((row => row.campanha === code));\n        else if (this.type === 'departamento') result = res?.filter((row => row.departamento === code));\n          return result?.slice(0,15);\n      }),\n      tap((res) => this.total = res?.length)\n    );\n  }\n\n  trackBy = (index: number, item: any) => item.host;\n}\n","<section *ngIf=\"(items$ | async) as items\">\n  <div class=\"container\" *ngIf=\"total > 0\">\n    <app-titulo [titulo]=\"title\" [icon]=\"icon\" [link]=\"link\"></app-titulo>\n    <swiper [lazy]=\"true\" [config]=\"options\">\n    <ng-template swiperSlide *ngFor=\"let item of items; let i = index; trackBy: trackBy\">\n      <app-product [code]=\"item\" [loja]=\"loja\"></app-product>\n    </ng-template>\n    <!-- Add Pagination -->\n    <div class=\"swiper-pagination\"></div>\n\n    <!-- Add Arrows -->\n    <div class=\"swiper-button-next\"></div>\n    <div class=\"swiper-button-prev\"></div>\n  </swiper>\n  </div>\n</section>\n","import { AfterViewInit, Directive, ElementRef, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: 'img[LazyLoad]'\n})\nexport class LazyLoadDirective implements AfterViewInit {\n  @HostBinding('attr.src') srcAttr = null;\n  @Input() src: string;\n\n  constructor(private el: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.canLazyLoad() ? this.lazyLoadImage() : this.loadImage();\n  }\n\n  private canLazyLoad() {\n    return window && 'IntersectionObserver' in window;\n  }\n\n  private lazyLoadImage () {\n    const obs = new IntersectionObserver(entries => {\n      entries.forEach(({ isIntersecting }) => {\n        if (isIntersecting) {\n          this.loadImage();\n          obs.unobserve(this.el.nativeElement);\n        }\n      });\n    });\n    obs.observe(this.el.nativeElement);\n  }\n\n  private loadImage () {\n    this.srcAttr = this.src;\n  }\n\n}\n","<div class=\"news mb-3\">\n    <h5 class=\"b-07 border-bottom pb-1 mb-3\">Últimas Noticias</h5>\n    <a [routerLink]=\"['/institucional/imprensa/', n.slug]\" routerLinkActive=\"router-link-active\"\n        class=\"waves-light f-09 b-07 text-muted pl-2 border-bottom pb-2 mb-2 text-justify\"\n        mdbWavesEffect *ngFor=\"let n of noticias$ | async; trackBy: trackById\">\n        {{ n.title }}\n    </a>\n</div>\n<div class=\"news mb-3\">\n    <h5 class=\"b-07 border-bottom pb-1 mb-3\">Joanir Zonta</h5>\n    <div class=\"media border-bottom pb-3 mb-4\" *ngFor=\"let item of items$ | async; trackBy: trackById\">\n        <img class=\"d-flex mr-3\" [src]=\"item.thumbnail\" alt=\"{{ item.title }}\" />\n        <div class=\"media-body\">\n            <h6 class=\"mt-0 font-weight-bold\">{{ item.title }}</h6>\n            <div [innerHTML]=\"item.content\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { NewsService } from '@core/services/news.service';\nimport { Page } from '@core/interfaces/news';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  items$: Observable<any>;\n  noticias$: Observable<Page[]>;\n\n  constructor( private news: NewsService ) { }\n\n  ngOnInit(): void {\n    this.items$ = this.news.PageCollection(`?include[]=97&include[]=104`);\n    this.noticias$ = this.news.LastNews(5);\n  }\n\n  trackById = (index: number, items: any) => items[index];\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\nimport { SidebarComponent } from './sidebar.component';\n\n@NgModule({\n  declarations: [SidebarComponent],\n  exports: [SidebarComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MDBBootstrapModule,\n  ]\n})\nexport class SidebarModule { }\n","<h2 class=\"b-07 mb-4 pb-1 border-bottom\" *ngIf=\"link\">\n  <a [routerLink]=\"[link]\">\n      <i class=\"{{ icon }} mr-2\" aria-hidden=\"true\"></i>\n      <span>{{ titulo }}</span>\n  </a>\n</h2>\n<h2 class=\"titulo-balck b-07 mb-4 pb-1 border-bottom\" *ngIf=\"!link\">\n  <i class=\"{{ icon }} mr-2\" aria-hidden=\"true\"></i>\n  <span>{{ titulo }}</span>\n</h2>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-titulo',\n  templateUrl: './titulo.component.html',\n  styleUrls: ['./titulo.component.scss']\n})\nexport class TituloComponent {\n  @Input() titulo: string;\n  @Input() icon?: string;\n  @Input() link?: string = '';\n}\n","import { Directive, AfterViewInit, HostBinding, Input, ElementRef } from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\n\n@Directive({\n  selector: 'source[webpProduct]'\n})\nexport class WebpProductDirective implements AfterViewInit {\n\n  @Input() src: string;\n  @HostBinding('attr.srcset') srcAttr = null;\n\n  constructor(private el: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.canLazyLoad() ? this.lazyLoadImage() : this.loadImage();\n  }\n\n  private canLazyLoad() {\n    return window && 'IntersectionObserver' in window;\n  }\n\n  private lazyLoadImage() {\n    const obs = new IntersectionObserver(entries => {\n      entries.forEach(({ isIntersecting }) => {\n        if (isIntersecting) {\n          this.loadImage();\n          obs.unobserve(this.el.nativeElement);\n        }\n      });\n    });\n    obs.observe(this.el.nativeElement);\n  }\n\n  private loadImage() {\n    const image = `${ environment.v1.url }/Containers/webp/download/${this.src}.webp`;\n    this.srcAttr = image;\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n\n  transform(value: string, limit = 35, completeWords = false, ellipsis = '...') {\n    value = `${value}`;\n    if (completeWords) {\n      limit = value.substr(0, limit).lastIndexOf(' ');\n    }\n    return value?.length > limit ? value.substr(0, limit) + ellipsis : value;\n  }\n\n}\n","<div class=\"product\" (click)=\"goToProduct()\">\n  <div class=\"message\">\n    <div class=\"mas18\" *ngIf=\"code.image === mas18\"> <p>+18</p> </div>\n    <div class=\"kit\" *ngIf=\"code.kit\"> <p>KIT</p> </div>\n  </div>\n  <div class=\"images\">\n    <picture>\n      <source webpProduct [src]=\"code.host\" type=\"image/webp\">\n      <img appProduct [src]=\"code.host\" [alt]=\"code.produtos.dsc_produto\" width=\"500\" height=\"500\" />\n    </picture>\n    <div class=\"promotion\">\n      <img Lazy *ngIf=\"code.preco_clube\" src=\"./assets/images/clube.png\"\n        alt=\"Tag Clube Condor\" class=\"selo_clube\" width=\"500\" height=\"500\">\n      <img Lazy *ngIf=\"code.preco_cashback\" src=\"./assets/images/selo_ddv.png\"\n        alt=\"Dinheiro de Volta\" class=\"selo_ddv\">\n    </div>\n  </div>\n  <div class=\"content\">\n    <p class=\"title\">{{ code.produtos.dsc_produto | truncate: 70 }}</p>\n    <div class=\"regular\">\n      <div *ngIf=\"!code.preco_clube\"></div>\n      <div style=\"height: 54px;\" *ngIf=\"!code.preco_clube\"></div>\n      <p [ngClass]=\"code.preco_clube ? 'price-clube' : 'price-normal'\">\n        {{ code.preco_regular || 0 | currency: \"R$\":\"symbol\":\"1.2-2\":\"pt\" }}\n        <span>{{ code.produtos.embalagem }}</span>\n      </p>\n      <div style=\"height: 18px;\"></div>\n    </div>\n    <div class=\"clube\" *ngIf=\"code.preco_clube\">\n      <p class=\"price\">\n        {{ code.preco_clube || 0 | currency: \"R$\":\"symbol\":\"1.2-2\":\"pt\" }}\n        <span>{{ code.produtos.embalagem }}</span>\n      </p>\n      <div class=\"parcela\" *ngIf=\"code.parcela_clube; else semParcela\">\n        <p>\n          {{ code.qtd_clube || 0 }}x de\n          {{ code.parcela_clube || 0 | currency: 'R$':'symbol':'1.2-2':'pt' }}\n          no cartão Condor.\n        </p>\n      </div>\n    </div>\n    <div class=\"validade\">\n      <p>\n        Oferta Válida de {{ code.produtos.start | date: \"dd/MM/yyyy\" }} a {{ code.produtos.end | date: \"dd/MM/yyyy\" }}\n        <br>{{ loja.nome }}\n      </p>\n    </div>\n  </div>\n</div>\n\n<ng-template #semParcela>\n  <div style=\"height: 18px;\"></div>\n</ng-template>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { StorageMap } from '@ngx-pwa/local-storage';\n\n\nimport { SeoService } from '@core/services/seo.service';\nimport { UtilService } from '@core/services/util.service';\nimport { environment } from 'src/environments/environment.prod';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss'],\n})\nexport class ProductComponent implements OnChanges {\n\n  @Input() code: any = [];\n  @Input() loja: any = [];\n  mas18 = 'Aprecie com moderação. É proibida a venda de bebidas alcoólicas a menores de 18 anos (Lei nº 8.069/90 Art.81, Estatuto da Criança e do Adolescente).';\n  webp: string = '';\n  image: string = '';\n  product: any = [];\n  imagem: any = [];\n\n  constructor(\n    private router: Router,\n    private seo: SeoService,\n    private util: UtilService,\n    private storageMap: StorageMap\n  ) { }\n\n  // ngOnInit() {\n  //   this.storageMap.watch('Loja').subscribe((res) => {\n  //     if (res) this.loja = res;\n  //     else this.loja = { loja: 0, slug: '', nome: '' };\n  //   });\n  // }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(changes);\n    this.code = changes.code.currentValue;\n  }\n\n  goToProduct =() => {\n    this.seo.dataLayerTracking({\n      event: 'productInteraction',\n      productAction: 'Visualizar Produto',\n      productName: this.code.produtos.dsc_produto\n    });\n    this.router.navigate([\n      'produto',\n      this.util.toSlug(this.code.produtos.dsc_departamento),\n      this.util.toSlug(this.code.produtos.dsc_setor),\n      this.code.produtos.slug\n    ]);\n  }\n}\n","import { Directive, AfterViewInit, HostBinding, Input, ElementRef } from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\n\n@Directive({\n  selector: 'img[appProduct]'\n})\nexport class ProductDirective implements AfterViewInit {\n\n  @Input() src: string;\n  @HostBinding('attr.src') srcAttr = null;\n\n  constructor(private el: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.canLazyLoad() ? this.lazyLoadImage() : this.loadImage();\n  }\n\n  private canLazyLoad() {\n    return window && 'IntersectionObserver' in window;\n  }\n\n  private lazyLoadImage() {\n    const obs = new IntersectionObserver(entries => {\n      entries.forEach(({ isIntersecting }) => {\n        if (isIntersecting) {\n          this.loadImage();\n          obs.unobserve(this.el.nativeElement);\n        }\n      });\n    });\n    obs.observe(this.el.nativeElement);\n  }\n\n  private loadImage() {\n    console.log(this.src);\n    const image = `${ environment.v1.url }/Containers/produtos/download/${this.src}.jpg`;\n    this.srcAttr = image;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeHtml, SafeStyle, SafeScript, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  public transform( value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html':\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n      case 'style':\n        return this.sanitizer.bypassSecurityTrustStyle(value);\n      case 'script':\n        return this.sanitizer.bypassSecurityTrustScript(value);\n      case 'url':\n        return this.sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl':\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n      default:\n        throw new Error(`Invalid safe type specified: ${type}`);\n    }\n  }\n\n}\n","import { ImageModule } from './../image/image.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SwiperModule } from 'swiper/angular';\n\nimport { SwipeComponent } from './swipe.component';\n\n@NgModule({\n  declarations: [SwipeComponent],\n  exports: [SwipeComponent],\n  imports: [\n    SwiperModule,\n    CommonModule,\n    ImageModule,\n  ]\n})\nexport class SwipeModule { }\n"]}